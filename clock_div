module clock_div
#(
    parameter DIVIDE_BY = 17
)
(
    input clock,
    input reset,
    output reg div_clock,
    wire clk_out[16:0]
);



DFF dff0(
.reset(reset),
.clock(clock),
.D(notQ),
.Q(clk_out[0])
);

DFF dff1(
.reset(reset),
.clock(clock),
.D(notQ),
.Q(clk_out[1])
);

DFF dff2(
.reset(reset),
.clock(clock),
.D(notQ),
.Q(clk_out[2])
);

DFF dff3(
.reset(reset),
.clock(clock),
.D(notQ),
.Q(clk_out[3])
);

DFF dff4(
.reset(reset),
.clock(clock),
.D(notQ),
.Q(clk_out[4])
);

DFF dff5(
.reset(reset),
.clock(clock),
.D(notQ),
.Q(clk_out[5])
);

DFF dff6(
.reset(reset),
.clock(clock),
.D(notQ),
.Q(clk_out[6])
);

DFF dff7(
.reset(reset),
.clock(clock),
.D(notQ),
.Q(clk_out[7])
);

DFF dff8(
.reset(reset),
.clock(clock),
.D(notQ),
.Q(clk_out[8])
);

DFF dff9(
.reset(reset),
.clock(clock),
.D(notQ),
.Q(clk_out[9])
);

DFF dff10(
.reset(reset),
.clock(clock),
.D(notQ),
.Q(clk_out[10])
);

DFF dff11(
.reset(reset),
.clock(clock),
.D(notQ),
.Q(clk_out[11])
);

DFF dff12(
.reset(reset),
.clock(clock),
.D(notQ),
.Q(clk_out[12])
);

DFF dff13(
.reset(reset),
.clock(clock),
.D(notQ),
.Q(clk_out[13])
);

DFF dff14(
.reset(reset),
.clock(clock),
.D(notQ),
.Q(clk_out[14])
);

DFF dff15(
.reset(reset),
.clock(clock),
.D(notQ),
.Q(clk_out[15])
);

DFF dff16(
.reset(reset),
.clock(clock),
.D(notQ),
.Q(clk_out[16])
);

endmodule
